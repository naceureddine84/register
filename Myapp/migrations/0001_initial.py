# Generated by Django 3.2.15 on 2023-01-10 10:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actel',
            fields=[
                ('code', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('type_actel', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Actel',
                'verbose_name_plural': 'Actels',
                'db_table': 'actel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DOT',
            fields=[
                ('code', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'DOT',
                'verbose_name_plural': 'DO Telecoms',
                'db_table': 'dot',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserApp',
            fields=[
                ('username', models.CharField(max_length=150, primary_key=True, serialize=False, unique=True, verbose_name="Nom d'utilisateur")),
                ('email', models.EmailField(max_length=150, unique=True, verbose_name='e-mail')),
                ('mobile', models.CharField(max_length=150, verbose_name='Numéro de téléphone')),
                ('password', models.CharField(max_length=150, verbose_name='Mot de passe')),
                ('fullname', models.CharField(max_length=150, verbose_name='Nom complet')),
                ('role', models.CharField(choices=[('Administrateur', 'Administrateur'), ('Utilisateur', 'Utilisateur'), ('Gestionnaire', 'Gestionnaire')], default='Administrateur', max_length=25)),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_login', models.DateTimeField(auto_now=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('actel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ACTEL', to='Myapp.actel')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'myusers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LogUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dateLog', models.DateTimeField(auto_now_add=True, verbose_name='Logging Date')),
                ('ipadr', models.CharField(default='-', max_length=100, verbose_name='IP Address')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Username')),
            ],
            options={
                'verbose_name': 'log',
                'verbose_name_plural': 'logs',
                'db_table': 'logs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Doleance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreate', models.DateTimeField(auto_now_add=True)),
                ('contenu', models.ImageField(blank=True, null=True, upload_to='clientpic/')),
                ('regType', models.SmallIntegerField(choices=[(0, 'Appréciation positive'), (1, 'Suggestions/Remareques'), (2, 'Doléances')], default=0, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(0)], verbose_name='Type')),
                ('satisfy', models.SmallIntegerField(choices=[(0, 'Positive'), (1, 'Neutre'), (2, 'Négative')], default=0, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(0)], verbose_name='Satisfaction')),
                ('dateReview', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Commantaire')),
                ('status', models.SmallIntegerField(choices=[(0, 'non traité'), (1, 'Traité')], default=0, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)], verbose_name='Etat')),
                ('userat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Doleance',
                'verbose_name_plural': 'Doleances',
                'db_table': 'doleance',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='actel',
            name='dot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AttachedDOT', to='Myapp.dot'),
        ),
    ]
